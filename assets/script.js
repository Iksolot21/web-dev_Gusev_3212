// –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –±–ª—é–¥–∞
let dishes = [];
const baseImageUrl = 'http://example.com/images/';

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –±–ª—é–¥
let selectedSoup = null;
let selectedMain = null;
let selectedDrink = null;
let selectedSalad = null;
let selectedDessert = null;

// –¢–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
const currentFilters = {
  soup: 'all',        // –§–∏–ª—å—Ç—Ä –¥–ª—è —Å—É–ø–æ–≤. –ó–Ω–∞—á–µ–Ω–∏–µ 'all' –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤—Å–µ –±–ª—é–¥–∞ –∏–∑ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.
  main: 'all', // –§–∏–ª—å—Ç—Ä –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –±–ª—é–¥. –¢–∞–∫–∂–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤—Å–µ –±–ª—é–¥–∞.
  drink: 'all',        // –§–∏–ª—å—Ç—Ä –¥–ª—è –Ω–∞–ø–∏—Ç–∫–æ–≤.
  salad: 'all',        // –§–∏–ª—å—Ç—Ä –¥–ª—è —Å–∞–ª–∞—Ç–æ–≤.
  dessert: 'all'       // –§–∏–ª—å—Ç—Ä –¥–ª—è –¥–µ—Å–µ—Ä—Ç–æ–≤.
};

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const notificationStyles = `
.notification {
position: fixed;
top: 50%;
left: 50%;
transform: translate(-50%, -50%);
background: white;
padding: 20px;
border-radius: 8px;
box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
z-index: 1000;
text-align: center;
min-width: 300px;
}

.notification button {
margin-top: 15px;
padding: 8px 20px;
background: #4CAF50;
color: white;
border: none;
border-radius: 4px;
cursor: pointer;
transition: all 0.3s ease;
}

.notification button:hover {
background: white;
color: #4CAF50;
border: 1px solid #4CAF50;
}

.overlay {
position: fixed;
top: 0;
left: 0;
right: 0;
bottom: 0;
background: rgba(0, 0, 0, 0.5);
z-index: 999;
}`;

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
const styleSheet = document.createElement('style');
styleSheet.textContent = notificationStyles;
document.head.appendChild(styleSheet);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –±–ª—é–¥–∞—Ö —Å API
async function loadDishes() {
  try {
    const response = await fetch('http://lab7-api.std-900.ist.mospolytech.ru/api/dishes');
    const data = await response.json();
    console.log('–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –±–ª—é–¥–∞:', data);
    dishes = data;
    displayAllDishes(); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—Å–µ –±–ª—é–¥–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö –±–ª—é–¥
function displayAllDishes() {
  // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const categories = ['soup', 'main-course', 'drink', 'salad', 'dessert'];
  categories.forEach(category => displayDishes(category, 'all'));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–ª—é–¥ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ñ–∏–ª—å—Ç—Ä—É
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–ª—é–¥ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ñ–∏–ª—å—Ç—Ä—É
function displayDishes(category, kind = 'all') {
  const container = document.getElementById(`${category}-list`);

  if (!container) {
    console.error(`–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å id ${category}-list –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
    return; // –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
  }

  container.innerHTML = ''; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö

  // –ï—Å–ª–∏ —Ñ–∏–ª—å—Ç—Ä —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Ç–µ–∫—É—â–∏–π –≤–∏–¥ —Ñ–∏–ª—å—Ç—Ä–∞ (kind), —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–≥–æ –Ω–∞ 'all'
  if (currentFilters[category] === kind) {
    currentFilters[category] = 'all'; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –Ω–∞ 'all'
  } else {
    currentFilters[category] = kind; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä
  }

  // –§–∏–ª—å—Ç—Ä—É–µ–º –±–ª—é–¥–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ñ–∏–ª—å—Ç—Ä—É
  let filteredDishes = dishes.filter(dish => dish.category === category)
    .filter(dish => currentFilters[category] === 'all' || dish.kind === currentFilters[category]);

  filteredDishes = sortDishesAlphabetically(filteredDishes);

  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –±–ª—é–¥–∞
  filteredDishes.forEach(dish => {
    const dishBlock = document.createElement('div');
    dishBlock.classList.add('dish-block');
    dishBlock.innerHTML = `
<img src="${baseImageUrl + dish.image}" alt="${dish.name}">
<h3>${dish.name}</h3>
<p class="price">${dish.price}‚ÇΩ</p>
<p class="weight">${dish.count}</p>
<button data-dish="${dish.keyword}" onclick="addToOrder('${dish.keyword}')">–î–æ–±–∞–≤–∏—Ç—å</button>
`;
    container.appendChild(dishBlock);
  });

  updateFilterButtons(category);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –±–ª—é–¥ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
function sortDishesAlphabetically(dishes) {
  return dishes.sort((a, b) => a.name.localeCompare(b.name));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
function updateFilterButtons(category) {
  const filterButtons = document.querySelectorAll(`#filters-${category} .filter-btn`);
  filterButtons.forEach(button => {
    if (button.dataset.kind === currentFilters[category]) {
      button.classList.add('active');
    } else {
      button.classList.remove('active');
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–ª—é–¥–∞ –≤ –∑–∞–∫–∞–∑
function addToOrder(dishKeyword) {
  const dish = dishes.find(d => d.keyword === dishKeyword);

  if (!dish) return;

  // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –±–ª—é–¥–∞
  switch (dish.category) {
    case 'soup':
      selectedSoup = dish;
      break;
    case 'main-course':
      selectedMain = dish;
      break;
    case 'drink':
      selectedDrink = dish;
      break;
    case 'salad':
      selectedSalad = dish;
      break;
    case 'dessert':
      selectedDessert = dish;
      break;
  }

  // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞
  updateOrderVisibility();
}

function updateOrderVisibility() {
  const orderSummary = document.getElementById('order-summary');
  const orderForm = document.getElementById('order-form');  // –§–æ—Ä–º–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞

  const hasAnySelection = selectedSoup || selectedMain || selectedDrink || selectedSalad || selectedDessert;

  // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (!hasAnySelection) {
    orderSummary.innerHTML = '<p><b>–ù–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ</b></p>';
    orderForm.innerHTML = '';  // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
    return;
  }

  const totalPrice = calculateTotalPrice();
  orderSummary.innerHTML = `
    <p><b>–°—É–ø</b></p>
    <p>${selectedSoup ? selectedSoup.name + ' - ' + selectedSoup.price + '‚ÇΩ' : '–°—É–ø –Ω–µ –≤—ã–±—Ä–∞–Ω'}</p>

    <p><b>–ì–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ</b></p>
    <p>${selectedMain ? selectedMain.name + ' - ' + selectedMain.price + '‚ÇΩ' : '–ë–ª—é–¥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ'}</p>

    <p><b>–ù–∞–ø–∏—Ç–æ–∫</b></p>
    <p>${selectedDrink ? selectedDrink.name + ' - ' + selectedDrink.price + '‚ÇΩ' : '–ù–∞–ø–∏—Ç–æ–∫ –Ω–µ –≤—ã–±—Ä–∞–Ω'}</p>

    <p><b>–°–∞–ª–∞—Ç –∏–ª–∏ —Å—Ç–∞—Ä—Ç–µ—Ä</b></p>
    <p>${selectedSalad ? selectedSalad.name + ' - ' + selectedSalad.price + '‚ÇΩ' : '–°–∞–ª–∞—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω'}</p>

    <p><b>–î–µ—Å–µ—Ä—Ç</b></p>
    <p>${selectedDessert ? selectedDessert.name + ' - ' + selectedDessert.price + '‚ÇΩ' : '–î–µ—Å–µ—Ä—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω'}</p>

    <p><b>–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞</b></p>
    <p><span id="order-price">${totalPrice}‚ÇΩ</span></p>
  `;

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
  orderForm.innerHTML = `
    <h3>–í–∞—à –∑–∞–∫–∞–∑:</h3>
    <p><b>–°—É–ø:</b> ${selectedSoup ? selectedSoup.name + ' - ' + selectedSoup.price + '‚ÇΩ' : '–ù–µ –≤—ã–±—Ä–∞–Ω'}</p>
    <p><b>–ì–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ:</b> ${selectedMain ? selectedMain.name + ' - ' + selectedMain.price + '‚ÇΩ' : '–ù–µ –≤—ã–±—Ä–∞–Ω–æ'}</p>
    <p><b>–ù–∞–ø–∏—Ç–æ–∫:</b> ${selectedDrink ? selectedDrink.name + ' - ' + selectedDrink.price + '‚ÇΩ' : '–ù–µ –≤—ã–±—Ä–∞–Ω'}</p>
    <p><b>–°–∞–ª–∞—Ç:</b> ${selectedSalad ? selectedSalad.name + ' - ' + selectedSalad.price + '‚ÇΩ' : '–ù–µ –≤—ã–±—Ä–∞–Ω'}</p>
    <p><b>–î–µ—Å–µ—Ä—Ç:</b> ${selectedDessert ? selectedDessert.name + ' - ' + selectedDessert.price + '‚ÇΩ' : '–ù–µ –≤—ã–±—Ä–∞–Ω'}</p>

    <button type="submit" id="submitOrderButton">–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑</button>
  `;
}

function resetOrder() {
  selectedSoup = null;
  selectedMain = null;
  selectedDrink = null;
  selectedSalad = null;
  selectedDessert = null;

  updateOrderVisibility();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤—ã–±–æ—Ä–∞ –≤ –∑–∞–∫–∞–∑–µ
function validateCombo() {
  const hasAnySelection = selectedSoup || selectedMain || selectedDrink || selectedSalad || selectedDessert;
  if (!hasAnySelection) {
    return "–ù–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ. –í—ã–±–µ—Ä–∏—Ç–µ –±–ª—é–¥–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞";
  }

  const hasDrink = selectedDrink !== null;
  if (!hasDrink && (selectedMain || selectedSoup || selectedSalad)) {
    return "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø–∏—Ç–æ–∫";
  }

  if (selectedSoup && !selectedMain && !selectedSalad) {
    return "–í—ã–±–µ—Ä–∏—Ç–µ –≥–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ/—Å–∞–ª–∞—Ç/—Å—Ç–∞—Ä—Ç–µ—Ä";
  }

  if (selectedSalad && !selectedSoup && !selectedMain) {
    return "–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–ø –∏–ª–∏ –≥–ª–∞–≤–Ω–æ–µ –±–ª—é–¥–æ";
  }

  const validCombinations = [
    selectedSoup && selectedMain && selectedSalad && selectedDrink,
    selectedSoup && selectedMain && selectedDrink && !selectedSalad,
    selectedSoup && selectedSalad && selectedDrink && !selectedMain,
    selectedMain && selectedSalad && selectedDrink && !selectedSoup,
    selectedMain && selectedDrink && !selectedSoup && !selectedSalad
  ];

  return validCombinations.some(combo => combo) ? "" : "–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è –±–ª—é–¥";
}

function showNotification(message) {
  const overlay = document.createElement('div');
  overlay.className = 'overlay';

  const notification = document.createElement('div');
  notification.className = 'notification';

  notification.innerHTML = `
    <p>${message}</p>
    <button>–û–∫–µ–πüëå</button>
  `;

  const button = notification.querySelector('button');
  button.addEventListener('click', () => {
    overlay.remove();
    notification.remove();
  });

  document.body.appendChild(overlay);
  document.body.appendChild(notification);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
function addFilterEventListeners() {
  const categories = ['soup', 'main-course', 'drink', 'salad', 'dessert'];

  categories.forEach(category => {
    const filterButtons = document.querySelectorAll(`#filters-${category} .filter-btn`);

    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const kind = button.dataset.kind;
        displayDishes(category, kind); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –±–ª—é–¥–∞ —Å –Ω–æ–≤—ã–º —Ñ–∏–ª—å—Ç—Ä–æ–º
      });
    });
  });
}
function calculateTotalPrice() {
  let totalPrice = 0;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –±–ª—é–¥–æ –≤—ã–±—Ä–∞–Ω–æ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ —Ü–µ–Ω—É
  if (selectedSoup) {
    totalPrice += selectedSoup.price;
  }

  if (selectedMain) {
    totalPrice += selectedMain.price;
  }

  if (selectedDrink) {
    totalPrice += selectedDrink.price;
  }

  if (selectedSalad) {
    totalPrice += selectedSalad.price;
  }

  if (selectedDessert) {
    totalPrice += selectedDessert.price;
  }

  return totalPrice;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function initializePage() {
  loadDishes();
  addFilterEventListeners();

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–æ—Ä–º—ã –∑–∞–∫–∞–∑–∞
  document.querySelector('form.custom-detail').addEventListener('submit', (event) => {
    event.preventDefault();
    const validationMessage = validateCombo();
    if (validationMessage) {
      showNotification(validationMessage);
    } else {
      console.log('–§–æ—Ä–º–∞ –≤–∞–ª–∏–¥–Ω–∞, –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å');
    }
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–±—Ä–æ—Å–∞ –∑–∞–∫–∞–∑–∞
  document.getElementById('resetOrderButton').addEventListener('click', resetOrder);
}

// –ó–∞–ø—É—Å–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.onload = initializePage;
window.displayDishes = displayDishes;
window.addToOrder = addToOrder;
window.resetOrder = resetOrder;