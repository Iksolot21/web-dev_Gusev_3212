document.addEventListener('DOMContentLoaded', () => {
  const ordersTableBody = document.getElementById('ordersTableBody');

  fetch('https://edu.std-900.ist.mospolytech.ru/labs/api/orders?api_key=51b2819e-4751-42cf-b166-e18bf8f957cb')
    .then(response => response.json())
    .then(async (data) => {
      const orders = data || [];

      if (orders.length === 0) {
        ordersTableBody.innerHTML = '<tr><td colspan="6">–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.</td></tr>';
        return;
      }

      // Process orders with dish names and prices
      for (const order of orders) {
        const row = document.createElement('tr');

        // Fetch dish names
        const soupName = await fetchDishName(order.soup_id);
        const mainCourseName = await fetchDishName(order.main_course_id);
        const drinkName = await fetchDishName(order.drink_id);
        const saladName = await fetchDishName(order.salad_id);
        const dessertName = await fetchDishName(order.dessert_id);

        // Calculate total price
        const totalPrice = await calculateOrderPrice(order);

        row.innerHTML = `
  <td>${order.id}</td>
  <td>${new Date(order.created_at).toLocaleDateString()}</td>
  <td>
    ${[
            soupName,
            mainCourseName,
            drinkName,
            saladName,
            dessertName
          ]
            .filter(dish => dish && dish !== '–ù–µ –≤—ã–±—Ä–∞–Ω–æ')  // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ –±–ª—é–¥–∞, –∫–æ—Ç–æ—Ä—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∏ –Ω–µ —è–≤–ª—è—é—Ç—Å—è "–ù–µ –≤—ã–±—Ä–∞–Ω–æ"
            .join(', ')}
  </td>
  <td class="text-right">${totalPrice}‚ÇΩ</td>
  <td>${order.delivery_time}</td>
  <td>
    <button onclick="viewOrderDetails(${order.id})">üëÅÔ∏è</button>
    <button onclick="editOrder(${order.id})">‚úèÔ∏è</button>
    <button onclick="confirmDeleteOrder(${order.id})">‚ùå</button>
  </td>
`;
        ordersTableBody.appendChild(row);
      }
    })
    .catch(error => {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã:', error);
      ordersTableBody.innerHTML = '<tr><td colspan="6">–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö.</td></tr>';
    });
});
// Function to calculate total order price
async function calculateOrderPrice(order) {
  const dishIds = [
    order.soup_id,
    order.main_course_id,
    order.drink_id,
    order.salad_id,
    order.dessert_id
  ].filter(Boolean);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º Set –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –±–ª—é–¥ –∏ –∏—Ö —Ü–µ–Ω
  const uniqueDishes = new Set();
  let totalPrice = 0;

  for (const dishId of dishIds) {
    try {
      if (!uniqueDishes.has(dishId)) {
        const response = await fetch(`https://edu.std-900.ist.mospolytech.ru/labs/api/dishes/${dishId}?api_key=51b2819e-4751-42cf-b166-e18bf8f957cb`);
        if (response.ok) {
          const dish = await response.json();
          totalPrice += dish.price || 0;
          uniqueDishes.add(dishId); // –î–æ–±–∞–≤–ª—è–µ–º id –±–ª—é–¥–∞ –≤ Set, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        }
      }
    } catch (error) {
      console.warn(`–û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω—ã –¥–ª—è –±–ª—é–¥–∞ ${dishId}:`, error);
    }
  }

  return totalPrice;
}
// Function to fetch dish details
async function fetchDishName(dishId) {
  if (!dishId) return '–ù–µ –≤—ã–±—Ä–∞–Ω–æ';

  try {
    const response = await fetch(`https://edu.std-900.ist.mospolytech.ru/labs/api/dishes/${dishId}?api_key=51b2819e-4751-42cf-b166-e18bf8f957cb`);
    if (!response.ok) return '–ë–ª—é–¥–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ';
    const dish = await response.json();
    console.log(`–î–∞–Ω–Ω—ã–µ –±–ª—é–¥–∞:`, dish);
    return dish.name || '–ë–ª—é–¥–æ –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
  } catch (error) {
    console.warn(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–ª—é–¥–∞ ${dishId}:`, error);
    return '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏';
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –¥–µ—Ç–∞–ª—è–º–∏ –∑–∞–∫–∞–∑–∞
async function viewOrderDetails(orderId) {
  try {
    // 1. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞
    const response = await fetch(`https://edu.std-900.ist.mospolytech.ru/labs/api/orders/${orderId}?api_key=51b2819e-4751-42cf-b166-e18bf8f957cb`);
    const order = await response.json();

    // 2. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –±–ª—é–¥–∞ —Å —Ü–µ–Ω–æ–π
    const fetchDishDetails = async (dishId) => {
      if (!dishId) return { name: '–ù–µ –≤—ã–±—Ä–∞–Ω–æ', price: 0 };
      try {
        const response = await fetch(`https://edu.std-900.ist.mospolytech.ru/labs/api/dishes/${dishId}?api_key=51b2819e-4751-42cf-b166-e18bf8f957cb`);
        if (response.ok) {
          const dish = await response.json();
          return { name: dish.name || '–ù–µ –≤—ã–±—Ä–∞–Ω–æ', price: dish.price || 0 };
        } else {
          throw new Error(`–û—à–∏–±–∫–∞ HTTP! —Å—Ç–∞—Ç—É—Å: ${response.status}`);
        }
      } catch (error) {
        console.warn(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –±–ª—é–¥–∞ ${dishId}:`, error);
        return { name: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏', price: 0 };
      }
    };

    // 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤—Å–µ—Ö –±–ª—é–¥ –∑–∞–∫–∞–∑–∞
    const soup = await fetchDishDetails(order.soup_id);
    const mainCourse = await fetchDishDetails(order.main_course_id);
    const drink = await fetchDishDetails(order.drink_id);
    const salad = await fetchDishDetails(order.salad_id);
    const dessert = await fetchDishDetails(order.dessert_id);

    // 4. –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
    const dishes = [
      { category: '–°—É–ø', ...soup },
      { category: '–û—Å–Ω–æ–≤–Ω–æ–µ –±–ª—é–¥–æ', ...mainCourse },
      { category: '–ù–∞–ø–∏—Ç–æ–∫', ...drink },
      { category: '–°–∞–ª–∞—Ç', ...salad },
      { category: '–î–µ—Å–µ—Ä—Ç', ...dessert },
    ];

    // 5. –†–∞—Å—á–µ—Ç –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    const totalPrice = dishes.reduce((sum, dish) => sum + dish.price, 0);

    // 6. –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –∑–∞–∫–∞–∑–∞ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –∑–∞–∫–∞–∑–∞ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    document.getElementById('viewOrderDate').textContent = `–î–∞—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è: ${new Date(order.created_at).toLocaleDateString()}`;
    document.getElementById('viewOrderFullName').textContent = `–ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è: ${order.full_name}`;
    document.getElementById('viewOrderEmail').textContent = `Email: ${order.email}`;
    document.getElementById('viewOrderPhone').textContent = `–¢–µ–ª–µ—Ñ–æ–Ω: ${order.phone}`;
    document.getElementById('viewOrderAddress').textContent = `–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: ${order.delivery_address}`;
    document.getElementById('viewOrderDeliveryTime').textContent = `–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: ${order.delivery_time || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`;
    document.getElementById('viewOrderComment').textContent = `–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${order.comment || '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`;

    // 7. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –±–ª—é–¥ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
    const orderItemsList = document.getElementById('orderItemsView');
    orderItemsList.innerHTML = ''; // –û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞
    dishes.forEach(dish => {
      if (dish.name && dish.name !== '–ù–µ –≤—ã–±—Ä–∞–Ω–æ') {
        const listItem = document.createElement('li');
        listItem.innerHTML = `<strong>${dish.category}:</strong> ${dish.name} (${dish.price}‚ÇΩ)`;
        orderItemsList.appendChild(listItem);
      }
    });

    // 8. –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    const totalPriceElement = document.getElementById('totalPriceView');
    totalPriceElement.textContent = `–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${totalPrice}‚ÇΩ`;

    // 9. –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–∫–∞–∑–∞
    openModal('viewOrderModal');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:', error);
    alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –±–ª—é–¥–µ –ø–æ –µ–≥–æ ID
function loadDishDetails(dishId, dishCategory) {
  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ id –ø—É—Å—Ç–æ–π
  if (!dishId) return;

  fetch(`https://edu.std-900.ist.mospolytech.ru/labs/api/dishes/${dishId}?api_key=51b2819e-4751-42cf-b166-e18bf8f957cb`)
    .then(response => {
      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ HTTP! —Å—Ç–∞—Ç—É—Å: ${response.status}`);
      }
      return response.json();
    })
    .then(dish => {
      const orderItemsList = document.getElementById('orderItems');
      const listItem = document.createElement('li');
      listItem.innerHTML = `<strong>${dishCategory}:</strong> ${dish.name || '–ë–ª—é–¥–æ –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'} (${dish.price || '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'}‚ÇΩ)`;
      orderItemsList.appendChild(listItem);
    })
    .catch(error => {
      console.warn(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ç–∞–ª–µ–π –¥–ª—è ${dishCategory}:`, error);
      const orderItemsList = document.getElementById('orderItems');
      const listItem = document.createElement('li');
      listItem.innerHTML = `<strong>${dishCategory}:</strong> –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –±–ª—é–¥–∞`;
      orderItemsList.appendChild(listItem);
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openModal(modalId) {
  document.getElementById(modalId).style.display = 'block';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModal(modalId) {
  document.getElementById(modalId).style.display = 'none';
}


async function editOrder(orderId) {
  try {
    // 1. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞
    const response = await fetch(`https://edu.std-900.ist.mospolytech.ru/labs/api/orders/${orderId}?api_key=51b2819e-4751-42cf-b166-e18bf8f957cb`);
    const order = await response.json();

    // 2. –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    document.getElementById('editFullName').value = order.full_name;
    document.getElementById('editEmail').value = order.email;
    document.getElementById('editPhone').value = order.phone;
    document.getElementById('editAddress').value = order.delivery_address;
    document.getElementById('editDeliveryTime').value = order.delivery_time || '';
    document.getElementById('editComment').value = order.comment || '';
    window.editOrderId = orderId;
    const orderDate = new Date(order.created_at);
    const formattedOrderDate = orderDate.toLocaleDateString() + ' ' + orderDate.toLocaleTimeString();
    document.getElementById('editOrderDate').textContent = `–î–∞—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è: ${formattedOrderDate}`;

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏, –µ—Å–ª–∏ –æ–Ω–æ —É–∫–∞–∑–∞–Ω–æ
    if (order.delivery_time) {
      document.getElementById('editDeliveryTime').textContent = ` ${order.delivery_time}`;
    } else {
      document.getElementById('editDeliveryTime').textContent = '';
    }

    // 3. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –±–ª—é–¥–∞ —Å —Ü–µ–Ω–æ–π
    const fetchDishDetails = async (dishId) => {
      if (!dishId) return { name: '–ù–µ –≤—ã–±—Ä–∞–Ω–æ', price: 0 };
      try {
        const response = await fetch(`https://edu.std-900.ist.mospolytech.ru/labs/api/dishes/${dishId}?api_key=51b2819e-4751-42cf-b166-e18bf8f957cb`);
        if (response.ok) {
          const dish = await response.json();
          return { name: dish.name || '–ù–µ –≤—ã–±—Ä–∞–Ω–æ', price: dish.price || 0 };
        } else {
          throw new Error(`–û—à–∏–±–∫–∞ HTTP! —Å—Ç–∞—Ç—É—Å: ${response.status}`);
        }
      } catch (error) {
        console.warn(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –±–ª—é–¥–∞ ${dishId}:`, error);
        return { name: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏', price: 0 };
      }
    };

    // 4. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤—Å–µ—Ö –±–ª—é–¥ –∑–∞–∫–∞–∑–∞
    const soup = await fetchDishDetails(order.soup_id);
    const mainCourse = await fetchDishDetails(order.main_course_id);
    const drink = await fetchDishDetails(order.drink_id);

    // 5. –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
    const dishes = [
      { category: '–°—É–ø', ...soup },
      { category: '–û—Å–Ω–æ–≤–Ω–æ–µ –±–ª—é–¥–æ', ...mainCourse },
      { category: '–ù–∞–ø–∏—Ç–æ–∫', ...drink }
    ];

    // 6. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –±–ª—é–¥ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const orderItemsList = document.getElementById('orderItems2');
    orderItemsList.innerHTML = ''; // –û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞
    dishes.forEach(dish => {
      if (dish.name && dish.name !== '–ù–µ –≤—ã–±—Ä–∞–Ω–æ') {
        const listItem = document.createElement('li');
        listItem.innerHTML = `<strong>${dish.category}:</strong> ${dish.name} (${dish.price}‚ÇΩ)`;
        orderItemsList.appendChild(listItem);
      }
    });

    // 7. –†–∞—Å—á–µ—Ç –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    const totalPrice = dishes.reduce((sum, dish) => sum + dish.price, 0);

    // 8. –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    const totalPriceElement = document.getElementById('totalPrice2');
    totalPriceElement.textContent = `–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${totalPrice}‚ÇΩ`;

    // 9. –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
    openModal('orderEditModal');

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:', error);
    alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
  }
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∑–∞–∫–∞–∑–µ
function saveEditedOrder(event) {
  event.preventDefault();

  const editedOrder = new FormData(); // –ò—Å–ø–æ–ª—å–∑—É–µ–º FormData –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö

  editedOrder.append('full_name', document.getElementById('editFullName').value);
  editedOrder.append('email', document.getElementById('editEmail').value);
  editedOrder.append('phone', document.getElementById('editPhone').value);
  editedOrder.append('delivery_address', document.getElementById('editAddress').value);
  editedOrder.append('comment', document.getElementById('editComment').value);

  // –û—Ç–ø—Ä–∞–≤–∫–∞ PUT –∑–∞–ø—Ä–æ—Å–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º FormData
  fetch(`https://edu.std-900.ist.mospolytech.ru/labs/api/orders/${window.editOrderId}?api_key=51b2819e-4751-42cf-b166-e18bf8f957cb`, {
    method: 'PUT',
    body: editedOrder // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç FormData –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞
  })
    .then(response => {
      if (!response.ok) {
        throw new Error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∑–∞–∫–∞–∑–∞');
      }
      return response.json();
    })
    .then(data => {
      alert('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω');
      closeModal('orderEditModal');
      closeModal('viewOrderModal'); // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
      location.reload();
      viewOrderDetails(window.editOrderId);
      editOrder(window.editOrderId);
    })
    .catch(error => {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∑–∞–∫–∞–∑–∞:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∑–∞–∫–∞–∑–∞');
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
function confirmDeleteOrder(orderId) {
  window.deleteOrderId = orderId;
  openModal('deleteConfirmationModal');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
function deleteOrder() {
  fetch(`https://edu.std-900.ist.mospolytech.ru/labs/api/orders/${window.deleteOrderId}?api_key=51b2819e-4751-42cf-b166-e18bf8f957cb`, {
    method: 'DELETE'
  })
    .then(response => response.json())
    .then(data => {
      alert('–ó–∞–∫–∞–∑ —É–¥–∞–ª–µ–Ω');
      closeModal('deleteConfirmationModal');
      location.reload();
    })
    .catch(error => {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞');
    });
}
